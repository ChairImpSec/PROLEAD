var searchData=
[
  ['tablebucket_0',['TableBucket',['../classhardware_1_1stats_1_1_table_bucket.html#a65eb419ee51a987fbd3696adc5223b4f',1,'hardware::stats::TableBucket::TableBucket()=default'],['../classhardware_1_1stats_1_1_table_bucket.html#a131b6a57e2684d1c6851b81e2c2e0e5e',1,'hardware::stats::TableBucket::TableBucket(Key key, size_t number_of_groups)'],['../classhardware_1_1stats_1_1_table_bucket.html#a625ca2d2732e4bb8de6726d1393475f6',1,'hardware::stats::TableBucket::TableBucket(Key key, size_t number_of_groups)']]],
  ['tabledata_1',['TableData',['../classhardware_1_1stats_1_1_table_data.html#a8f5af6a040931819229ca320626a88c9',1,'hardware::stats::TableData']]],
  ['tableentry_2',['TableEntry',['../classhardware_1_1stats_1_1_table_entry.html#aa33872a606d3048418975b5c2fde1d8f',1,'hardware::stats::TableEntry']]],
  ['tableentrycompare_3',['TableEntryCompare',['../_operators_8hpp.html#a8c2eaed2bfd9987c31de56ddab3008e6',1,'TableEntryCompare(const Util::TableEntryStruct &amp;firstOperand, const Util::TableEntryStruct &amp;secondOperand):&#160;Operators.cpp'],['../src_2_software_2_operators_8cpp.html#a8c2eaed2bfd9987c31de56ddab3008e6',1,'TableEntryCompare(const Util::TableEntryStruct &amp;firstOperand, const Util::TableEntryStruct &amp;secondOperand):&#160;Operators.cpp']]],
  ['tableentrystruct_4',['TableEntryStruct',['../struct_util_1_1_table_entry_struct.html#a15b51d7fae14599314278215ca13ba58',1,'Util::TableEntryStruct::TableEntryStruct(unsigned int)'],['../struct_util_1_1_table_entry_struct.html#ac9f82893b7141e3a241f21987deb7dfb',1,'Util::TableEntryStruct::TableEntryStruct(unsigned int, std::vector&lt; unsigned char &gt; &amp;, unsigned int, unsigned int)']]],
  ['test_5',['Test',['../namespace_software_1_1_test.html#a9800cf60fa86c8c393f0ec5e04d48b0c',1,'Software::Test']]],
  ['test_5fcase_6',['TEST_CASE',['../ut_2_hardware_2_operators_8cpp.html#a21415eec6711feeb52c0b21abbe3034e',1,'TEST_CASE(&quot;Test equal/not equal operator of Hardware::ProbePositionStruct&quot;, &quot;[operator==(const Hardware::ProbePositionStruct&amp;, const Hardware::ProbePositionStruct&amp;)]&quot;):&#160;Operators.cpp'],['../ut_2_hardware_2_operators_8cpp.html#a2b59f10786455da7045543dc6a7e52f6',1,'TEST_CASE(&quot;Test less/greater than operator of Hardware::ProbePositionStruct&quot;, &quot;[operator&lt;(const Hardware::ProbePositionStruct&amp;, const Hardware::ProbePositionStruct&amp;)]&quot;):&#160;Operators.cpp'],['../ut_2_hardware_2_operators_8cpp.html#aed427b0d3d0ce509402f06269fcb1036',1,'TEST_CASE(&quot;Test less/greater than or equal operator of Hardware::ProbePositionStruct&quot;, &quot;[operator&lt;=(const Hardware::ProbePositionStruct&amp;, const Hardware::ProbePositionStruct&amp;)]&quot;):&#160;Operators.cpp'],['../ut_2_hardware_2_operators_8cpp.html#a6b3102e41e1dbba18e691aeea866e1c4',1,'TEST_CASE(&quot;Test equal operator of vector&lt;Hardware::ProbePositionStruct&gt;&quot;, &quot;[operator==(const vector&lt;Hardware::ProbePositionStruct&gt;&amp;, const vector&lt;Hardware::ProbePositionStruct&gt;&amp;)]&quot;):&#160;Operators.cpp'],['../ut_2_hardware_2_operators_8cpp.html#abfbd552778f494aa14cbd1b9141ffaff',1,'TEST_CASE(&quot;Test less/greater than operator of vector&lt;Hardware::ProbePositionStruct&gt;&quot;, &quot;[operator&lt;(const vector&lt;Hardware::ProbePositionStruct&gt;&amp;, const vector&lt;Hardware::ProbePositionStruct&gt;&amp;)]&quot;):&#160;Operators.cpp'],['../ut_2_hardware_2_operators_8cpp.html#a0ed7cb7ce5fd88c4d0b293a43f8d797d',1,'TEST_CASE(&quot;Test less/greater than or equal operator of vector&lt;Hardware::ProbePositionStruct&gt;&quot;, &quot;[operator&lt;(const vector&lt;Hardware::ProbePositionStruct&gt;&amp;, const vector&lt;Hardware::ProbePositionStruct&gt;&amp;)]&quot;):&#160;Operators.cpp'],['../ut_2_hardware_2_test_8cpp.html#a4005024228b35dc2a589ba148e7e937d',1,'TEST_CASE(&quot;Test normal table update&quot;, &quot;[void NormalTableUpdate(Hardware::SimulationStruct&amp;, Hardware::TestStruct&amp;, Hardware::ProbingSetStruct&amp;, std::vector&lt;Util::TableEntryStruct&gt;&amp;]&quot;):&#160;Test.cpp'],['../ut_2_util_2_util_8cpp.html#aa1a18d20165b2c8324a726ac12b82b1b',1,'TEST_CASE(&quot;Test probing set coverage&quot;, &quot;[bool SetCoverage(std::vector&lt;unsigned int&gt;&amp;, std::vector&lt;unsigned int&gt;&amp;)]&quot;):&#160;Util.cpp'],['../ut_2_util_2_util_8cpp.html#a9b9c814bf7b22525dd17532d29901495',1,'TEST_CASE(&quot;Benchmark probing set coverage&quot;, &quot;[bool SetCoverage(std::vector&lt;unsigned int&gt;&amp;, std::vector&lt;unsigned int&gt;&amp;)]&quot;):&#160;Util.cpp']]],
  ['threadsimulation_7',['ThreadSimulation',['../namespace_software_1_1_prepare.html#a687edf893eeb5e463c8ac858199224f6',1,'Software::Prepare']]],
  ['thumb_5fexpand_5fimm_8',['thumb_expand_imm',['../namespacemulator_1_1arm__functions.html#a0339ece0821742643802a750142b87f8',1,'mulator::arm_functions']]],
  ['thumb_5fexpand_5fimm_5fc_9',['thumb_expand_imm_C',['../namespacemulator_1_1arm__functions.html#a5dad2532f297eb6c41e054236931557c',1,'mulator::arm_functions']]],
  ['to_5fint_10',['to_int',['../namespacemulator.html#aaaab34fec3fe2186aa9164f30a47b5a2',1,'mulator']]],
  ['to_5fstring_11',['to_string',['../namespacemulator.html#a184043802829cd6702f6e66d1c4c2857',1,'mulator::to_string(const Architecture &amp;x)'],['../namespacemulator.html#ab0dbdc3a35904fa1c0cad49076974855',1,'mulator::to_string(const Condition &amp;x)'],['../namespacemulator.html#abf553067dd6a256ee23364f9ed520e6c',1,'mulator::to_string(const Mnemonic &amp;x)'],['../namespacemulator.html#a53ed1fabaaf1fd89fbb799f36a887491',1,'mulator::to_string(const Register &amp;x)'],['../namespacemulator.html#ab0caabf655df450decaef96629886c5c',1,'mulator::to_string(const ReturnCode &amp;x)'],['../namespacemulator.html#abbe9aa00e37a83a28c069ba667d36216',1,'mulator::to_string(const ShiftType &amp;x)']]],
  ['to_5fstring_5fprobe_12',['to_string_probe',['../namespacemulator.html#a90555d2f2bf25000af70678629561b33',1,'mulator']]],
  ['trimsignalname_13',['TrimSignalName',['../namespace_hardware_1_1_read.html#aae940e47f1fb15a22ffeb8c9a2f0c893',1,'Hardware::Read']]]
];
